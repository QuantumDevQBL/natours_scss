/*reset size of all elements using this universal selector*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /*this property helps us include padding and border in the width and height of the element*/
  /*box-sizing: border-box;*/
  /*We now inherit box-sizing from the body element*/
  box-sizing: inherit;
}

html {
  /*The rem unit multiply the root font-size so ten pixels is a simple value to keep track on the font through our css file*/
  /*font-size: 10px;*/
  /*It's a good practive to put the font size in percentrage beacause we still use the root font size of the browser (16px) and we let the ability to the user to manipulate this default value*/
  /*We want 10px for our font size so 10/16=0.625*/

  /*For responsive design concern we used a trick that makes all of our layout dependant of our font-size, so in the media queries, when we changethe root font-size we manage to modify th ENTIRE LAYOUT, it's a huge improvement*/
  font-size: 62.5%; //1rem = 10px
  scroll-behavior: smooth;

  @include respond(tab-land) { //width < 900
    font-size: 56.25%; //1rem = 9px so 9/16 = 56.25%
  }

  @include respond(tab-port) { //width < 600
    font-size: 50%; //1rem = 8px so 8/16 = 50%
  }

  @include respond(big-desktop) {
    font-size: 75%; //1rem = 12px so 12/16 = 75%
  }
}

/*set the project font inheritance*/
body {
  /*this property helps us include padding and border in the width and height of the element*/
  /*It's better to put it on the body so that we can inherit it for our entire layout*/
  box-sizing: border-box;
  padding: 3rem;

  @include respond(tab-port) { //width < 600
    padding: 0rem; //1rem = 8px so 8/16 = 50%
  }
 
}

::selection {
  background-color: $color-primary;
  color: $color-white;
}