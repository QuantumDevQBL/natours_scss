.header {
  /*We make this elemenet in relative position to position the insides element mith absolute positioning*/
  position: relative;

  /*vh stands for viewport Height, the value is a percentage of the total height of the viewport*/
  height: 85vh;
  background-image:
  /*we have 2 background images, first the gradient the the image*/ linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero-small.jpg);

  /*Target resolution screen and resolution screen
    Logic in media-queries: https://css-tricks.com/logic-in-css-media-queries/
    */
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
  only screen and  (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
  only screen and  (min-width: 125em) {
    background-image:
  /*we have 2 background images, first the gradient the the image*/ linear-gradient(
        to right bottom,
        rgba($color-secondary-light, 0.8),
        rgba($color-secondary-dark, 0.8)
      ),
      url(../img/hero.jpg);
  }

  background-size: cover;
  /*so that the top of the image is not cropped*/
  background-position: top;
  /*
  to create a clipping section on the element 
  src: https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path 
  clippy tools : https://bennettfeely.com/clippy/
  */

  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    height: 95vh;
  }

  -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 75vh, 0 100%);
  clip-path: polygon(0% 0%, 100% 0%, 100% 75vh, 0 100%);

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);

    margin-bottom: 2rem;
  }

  /*logo styling*/
  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    /*these coordinates are relative to the parent*/
    top: 40%;
    left: 50%;
    /*these coordinates are relative to the element itself, not its parent*/
    transform: translate(-50%, -50%);

    text-align: center;
  }
}
